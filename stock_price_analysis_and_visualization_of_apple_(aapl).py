# -*- coding: utf-8 -*-
"""Stock Price Analysis and Visualization of Apple (AAPL)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LXRPzax8wti5jrn8pBV136c2ilko35eq
"""

import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Crawl dữ liệu: Lấy dữ liệu giá cổ phiếu Apple (AAPL)
ticker = 'AAPL'
data = yf.download(ticker, start='2021-01-01', end='2024-01-01')

# 2. Làm sạch dữ liệu
# Kiểm tra dữ liệu thiếu
print(data.isnull().sum())

# Dữ liệu không có giá trị thiếu, nhưng giữ lại các cột cần thiết
df = data[['Open', 'High', 'Low', 'Close', 'Volume']]

# Kiểm tra một số chỉ số cơ bản
print(df.head())

# 3. Phân tích dữ liệu
# Tính toán giá trung bình, giá thấp nhất, cao nhất
mean_close = df['Close'].mean()
min_close = df['Close'].min()
max_close = df['Close'].max()


print(f"Giá đóng cửa trung bình: {mean_close}")
print(f"Giá đóng cửa thấp nhất: {min_close}")
print(f"Giá đóng cửa cao nhất: {max_close}")

# Tính toán biến động giá (chênh lệch giữa giá cao và giá thấp trong ngày)
df['Volatility'] = df['High'] - df['Low']

# 4. Vẽ biểu đồ phân tích
# a. Biểu đồ giá đóng cửa theo thời gian
plt.figure(figsize=(12, 6))
plt.plot(df.index, df['Close'], label='Giá đóng cửa', color='blue')
plt.title('Giá Cổ Phiếu Apple (AAPL) - Giá Đóng Cửa', fontsize=14)
plt.xlabel('Ngày', fontsize=12)
plt.ylabel('Giá (USD)', fontsize=12)
plt.grid(True)
plt.legend()
plt.show()

# b. Biểu đồ phân phối giá đóng cửa
plt.figure(figsize=(10, 6))
sns.histplot(df['Close'], bins=30, kde=True, color='green')
plt.title('Phân Phối Giá Đóng Cửa của Cổ Phiếu Apple', fontsize=14)
plt.xlabel('Giá (USD)', fontsize=12)
plt.ylabel('Tần suất', fontsize=12)
plt.show()

# c. Biểu đồ biến động giá cổ phiếu
plt.figure(figsize=(12, 6))
plt.plot(df.index, df['Volatility'], label='Biến động giá', color='red')
plt.title('Biến Động Giá Cổ Phiếu Apple (AAPL)', fontsize=14)
plt.xlabel('Ngày', fontsize=12)
plt.ylabel('Biến động (USD)', fontsize=12)
plt.grid(True)
plt.legend()
plt.show()

